<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kg.seeot.mybatis.product.ProductMapper">

	<resultMap type="com.kg.seeot.product.dto.ProductDTO" id="product">
		<id property="productNo" column="product_no" />
		<result property="productName" column="product_name"/>
		<result property="productPrice" column="product_price"/>
		<result property="productFile" column="product_file"/>
		<result property="productCategorie" column="product_categorie"/>
		<result property="productDate" column="product_date"/>
		<result property="reviewCount" column="review_count"/>
		<result property="productRating" column="product_rating"/>
		<result property="productContent" column="product_content"/>
	</resultMap>
	
	<resultMap type="com.kg.seeot.product.dto.ProductManageDTO" id="product_management">
		<id property="productNo" column="product_no" />
		<result property="productStack" column="product_stack"/>
		<result property="productSize" column="product_size"/>
		<result property="productColor" column="product_color"/>
	</resultMap>
	
       
	<select id="allList" resultMap="product">
		select * from product
	</select>
	
	<select id="list" resultMap="product">
		select * from product where product_categorie = #{productCategorie}
	</select>
	
	<select id="productView" resultMap="product">
		select * from product where product_no = #{productNo}
	</select>
	
	<select id="productNoList" resultMap="product">
		select * from product where product_no = #{productNo}
	</select>
	
	<select id="productNameList" resultMap="product">
		select * from product where UPPER(product_name) like UPPER('%' || #{productName} || '%')
	</select>
	
	<select id="managementSize" resultMap="product_management">
		select distinct product_size from product_management where product_no = #{productNo}
	</select>
	
	<select id="managementColor" resultMap="product_management">
		select distinct product_color from product_management where product_no = #{productNo}
	</select>
	
	<select id="productManageView" resultMap="product_management">
		select * from product_management where product_no = #{productNo} order by product_size
	</select>
	
	<insert id="productSave">
		insert into product(product_no, product_name, product_price, product_file, product_categorie, product_date, product_content)
			 values(#{productNo}, #{productName}, #{productPrice}, #{productFile}, #{productCategorie}, sysdate, #{productContent})
	</insert>
	
	<insert id="productManageSave">
		insert into product_management(product_no, product_stack, product_size, product_color)
			 values(#{productNo}, #{productStack}, #{productSize}, #{productColor})
	</insert>
	
	<delete id="productDelete">
		delete from product where product_no = #{productNo}
	</delete>
	
	<update id="productModify">
		update product set product_name=#{productName}, product_price=#{productPrice}, product_file=#{productFile}, product_categorie=#{productCategorie}, product_content=#{productContent}  where product_no = #{productNo}
	</update>
	
	<delete id="managementDelete">
		delete from product_management where product_no=#{productNo} and product_size=#{productSize} and product_color=#{productColor}
	</delete>
	
	<select id="managementModify_Form" resultMap="product_management">
		select * from product_management where product_no=#{productNo} and product_size=#{productSize} and product_color=#{productColor}
	</select>
	
	<update id="managementModify">
		update product_management set product_stack=#{moProductStack}, product_size=#{moProductSize}, product_color=#{moProductColor} where product_no=#{productNo} and product_stack=#{productStack} and product_size=#{productSize} and product_color=#{productColor}
	</update>
	
	<update id="orderaddmodify">
		update product_management set product_stack = product_stack-#{o} where product_no=#{n} and product_size=#{s} and product_color=#{c}
	</update>
	<update id="ordercancelmodify">
		update product_management set product_stack = product_stack+#{o} where product_no=#{n} and product_size=#{s} and product_color=#{c}
	</update>
	
	<select id="allCount" resultType="Integer">
		<if test="chkColor_arr == null">
			select count(*) from product
				<if test="productCategorie != 0">
					where product_categorie = #{productCategorie} 
						<if test="chkPrice_arr != null">
								<trim prefix="and (" prefixOverrides="or" suffix=")">
									<foreach collection="chkPrice_arr" item="chkPrice">
										<choose>
											<when test="chkPrice.equals('PR1')">
												product_price between 0 and 10000
											</when>
											<when test="chkPrice.equals('PR2')">
												or product_price between 10000 and 30000
											</when>
											<when test="chkPrice.equals('PR3')">
												or product_price between 30000 and 50000
											</when>
											<when test="chkPrice.equals('PR4')">
												or product_price between 50000 and 100000
											</when>
											<when test="chkPrice.equals('PR5')">
												or product_price between 100000 and 999999999
											</when>
										</choose>
									</foreach>
								</trim>
							</if>
				</if>
				<if test="productCategorie == 0">
						<if test="chkPrice_arr != null">
							<trim prefix="where (" prefixOverrides="or" suffix=")">
								<foreach collection="chkPrice_arr" item="chkPrice">
									<choose>
										<when test="chkPrice.equals('PR1')">
											product_price between 0 and 10000
										</when>
										<when test="chkPrice.equals('PR2')">
											or product_price between 10000 and 30000
										</when>
										<when test="chkPrice.equals('PR3')">
											or product_price between 30000 and 50000
										</when>
										<when test="chkPrice.equals('PR4')">
											or product_price between 50000 and 100000
										</when>
										<when test="chkPrice.equals('PR5')">
											or product_price between 100000 and 999999999
										</when>
									</choose>
								</foreach>
							</trim>
						</if>
				</if>
		</if>
		<if test="chkColor_arr != null">
			select count(*) from (select distinct A.* from product A join product_management B on A.product_no = B.product_no
				<if test="productCategorie != 0">
					where A.product_categorie = #{productCategorie} 
					<if test="chkPrice_arr != null">
						<trim prefix="and (" prefixOverrides="or" suffix=")">
							<foreach collection="chkPrice_arr" item="chkPrice">
								<choose>
									<when test="chkPrice.equals('PR1')">
										A.product_price between 0 and 10000
									</when>
									<when test="chkPrice.equals('PR2')">
										or A.product_price between 10000 and 30000
									</when>
									<when test="chkPrice.equals('PR3')">
										or A.product_price between 30000 and 50000
									</when>
									<when test="chkPrice.equals('PR4')">
										or A.product_price between 50000 and 100000
									</when>
									<when test="chkPrice.equals('PR5')">
										or A.product_price between 100000 and 999999999
									</when>
								</choose>
							</foreach>
						</trim>
					</if>
					<foreach collection="chkColor_arr" item="chkColor" open="and B.product_color in (" separator="," close=")">
						#{chkColor}
					</foreach>
				</if>
				<if test="productCategorie == 0">
					<if test="chkPrice_arr != null">
						<trim prefix="where (" prefixOverrides="or" suffix=")">
							<foreach collection="chkPrice_arr" item="chkPrice">
								<choose>
									<when test="chkPrice.equals('PR1')">
										A.product_price between 0 and 10000
									</when>
									<when test="chkPrice.equals('PR2')">
										or A.product_price between 10000 and 30000
									</when>
									<when test="chkPrice.equals('PR3')">
										or A.product_price between 30000 and 50000
									</when>
									<when test="chkPrice.equals('PR4')">
										or A.product_price between 50000 and 100000
									</when>
									<when test="chkPrice.equals('PR5')">
										or A.product_price between 100000 and 999999999
									</when>
								</choose>
							</foreach>
						</trim>
						<foreach collection="chkColor_arr" item="chkColor" open="and B.product_color in (" separator="," close=")">
							#{chkColor}
						</foreach>
					</if>
					<if test="chkPrice_arr == null">
						<foreach collection="chkColor_arr" item="chkColor" open="where B.product_color in (" separator="," close=")">
							#{chkColor}
						</foreach>
					</if>
				</if>
				) C
		</if>
	</select>
	
	<select id="prolist" resultMap="product">
			<if test="chkColor_arr == null">
			select B.* from(select rownum rn, A.* from(select * from product 
				<if test="productCategorie != 0">
					where product_categorie = #{productCategorie} 
						<if test="chkPrice_arr != null">
								<trim prefix="and (" prefixOverrides="or" suffix=")">
									<foreach collection="chkPrice_arr" item="chkPrice">
										<choose>
											<when test="chkPrice.equals('PR1')">
												product_price between 0 and 10000
											</when>
											<when test="chkPrice.equals('PR2')">
												or product_price between 10000 and 30000
											</when>
											<when test="chkPrice.equals('PR3')">
												or product_price between 30000 and 50000
											</when>
											<when test="chkPrice.equals('PR4')">
												or product_price between 50000 and 100000
											</when>
											<when test="chkPrice.equals('PR5')">
												or product_price between 100000 and 999999999
											</when>
										</choose>
									</foreach>
								</trim>
							</if>
				</if>
				<if test="productCategorie == 0">
						<if test="chkPrice_arr != null">
							<trim prefix="where (" prefixOverrides="or" suffix=")">
								<foreach collection="chkPrice_arr" item="chkPrice">
									<choose>
										<when test="chkPrice.equals('PR1')">
											product_price between 0 and 10000
										</when>
										<when test="chkPrice.equals('PR2')">
											or product_price between 10000 and 30000
										</when>
										<when test="chkPrice.equals('PR3')">
											or product_price between 30000 and 50000
										</when>
										<when test="chkPrice.equals('PR4')">
											or product_price between 50000 and 100000
										</when>
										<when test="chkPrice.equals('PR5')">
											or product_price between 100000 and 999999999
										</when>
									</choose>
								</foreach>
							</trim>
						</if>
				</if>
				<choose>
					<when test="orderBy.equals('redate')">
						order by product_date desc
					</when>
					<when test="orderBy.equals('oldate')">
						order by product_date asc
					</when>
					<when test="orderBy.equals('hprice')">
						order by product_price desc, product_date desc
					</when>
					<when test="orderBy.equals('lprice')">
						order by product_price asc, product_date desc
					</when>
					<when test="orderBy.equals('review')">
						order by review_count desc, product_date desc
					</when>
				</choose>
				)A)B where rn between #{start} and #{end}
		</if>
		<if test="chkColor_arr != null">
			select D.* from(select rownum rn, C.* from(select distinct A.* from product A join product_management B on A.product_no = B.product_no
				<if test="productCategorie != 0">
					where A.product_categorie = #{productCategorie} 
					<if test="chkPrice_arr != null">
						<trim prefix="and (" prefixOverrides="or" suffix=")">
							<foreach collection="chkPrice_arr" item="chkPrice">
								<choose>
									<when test="chkPrice.equals('PR1')">
										A.product_price between 0 and 10000
									</when>
									<when test="chkPrice.equals('PR2')">
										or A.product_price between 10000 and 30000
									</when>
									<when test="chkPrice.equals('PR3')">
										or A.product_price between 30000 and 50000
									</when>
									<when test="chkPrice.equals('PR4')">
										or A.product_price between 50000 and 100000
									</when>
									<when test="chkPrice.equals('PR5')">
										or A.product_price between 100000 and 999999999
									</when>
								</choose>
							</foreach>
						</trim>
					</if>
					<foreach collection="chkColor_arr" item="chkColor" open="and B.product_color in (" separator="," close=")">
						#{chkColor}
					</foreach>
				</if>
				<if test="productCategorie == 0">
					<if test="chkPrice_arr != null">
						<trim prefix="where (" prefixOverrides="or" suffix=")">
							<foreach collection="chkPrice_arr" item="chkPrice">
								<choose>
									<when test="chkPrice.equals('PR1')">
										A.product_price between 0 and 10000
									</when>
									<when test="chkPrice.equals('PR2')">
										or A.product_price between 10000 and 30000
									</when>
									<when test="chkPrice.equals('PR3')">
										or A.product_price between 30000 and 50000
									</when>
									<when test="chkPrice.equals('PR4')">
										or A.product_price between 50000 and 100000
									</when>
									<when test="chkPrice.equals('PR5')">
										or A.product_price between 100000 and 999999999
									</when>
								</choose>
							</foreach>
						</trim>
						<foreach collection="chkColor_arr" item="chkColor" open="and B.product_color in (" separator="," close=")">
							#{chkColor}
						</foreach>
					</if>
					<if test="chkPrice_arr == null">
						<foreach collection="chkColor_arr" item="chkColor" open="where B.product_color in (" separator="," close=")">
							#{chkColor}
						</foreach>
					</if>
				</if>
				<choose>
					<when test="orderBy.equals('redate')">
						order by product_date desc
					</when>
					<when test="orderBy.equals('hprice')">
						order by product_price desc, product_date desc
					</when>
					<when test="orderBy.equals('lprice')">
						order by product_price asc, product_date desc
					</when>
					<when test="orderBy.equals('rating')">
						order by product_rating desc, product_date desc
					</when>
					<when test="orderBy.equals('review')">
						order by review_count desc, product_date desc
					</when>
				</choose>
				)C)D where rn between #{start} and #{end}
		</if>
	</select>
	
	<select id="searchList" resultMap="product">
			<if test="chkColor_arr == null">
			select B.* from(select rownum rn, A.* from(select * from product 
				<if test="productCategorie != 0">
					where A.product_categorie = #{productCategorie}
						<if test="chkPrice_arr != null">
								<trim prefix="and (" prefixOverrides="or" suffix=")">
									<foreach collection="chkPrice_arr" item="chkPrice">
										<choose>
											<when test="chkPrice.equals('PR1')">
												product_price between 0 and 10000
											</when>
											<when test="chkPrice.equals('PR2')">
												or product_price between 10000 and 30000
											</when>
											<when test="chkPrice.equals('PR3')">
												or product_price between 30000 and 50000
											</when>
											<when test="chkPrice.equals('PR4')">
												or product_price between 50000 and 100000
											</when>
											<when test="chkPrice.equals('PR5')">
												or product_price between 100000 and 999999999
											</when>
										</choose>
									</foreach>
								</trim>
							</if>
				</if>
				<if test="productCategorie == 0">
					where UPPER(product_name) like UPPER('%' || #{keyword} || '%')
						<if test="chkPrice_arr != null">
							<trim prefix="and (" prefixOverrides="or" suffix=")">
								<foreach collection="chkPrice_arr" item="chkPrice">
									<choose>
										<when test="chkPrice.equals('PR1')">
											product_price between 0 and 10000
										</when>
										<when test="chkPrice.equals('PR2')">
											or product_price between 10000 and 30000
										</when>
										<when test="chkPrice.equals('PR3')">
											or product_price between 30000 and 50000
										</when>
										<when test="chkPrice.equals('PR4')">
											or product_price between 50000 and 100000
										</when>
										<when test="chkPrice.equals('PR5')">
											or product_price between 100000 and 999999999
										</when>
									</choose>
								</foreach>
							</trim>
						</if>
				</if>
				<choose>
					<when test="orderBy.equals('redate')">
						order by product_date desc
					</when>
					<when test="orderBy.equals('oldate')">
						order by product_date asc
					</when>
					<when test="orderBy.equals('hprice')">
						order by product_price desc, product_date desc
					</when>
					<when test="orderBy.equals('lprice')">
						order by product_price asc, product_date desc
					</when>
					<when test="orderBy.equals('review')">
						order by review_count desc, product_date desc
					</when>
				</choose>
				)A)B where rn between #{start} and #{end}
		</if>
		<if test="chkColor_arr != null">
			select D.* from(select rownum rn, C.* from(select distinct A.* from product A join product_management B on A.product_no = B.product_no
				<if test="productCategorie != 0">
					where A.product_categorie = #{productCategorie} 
					<if test="chkPrice_arr != null">
						<trim prefix="and (" prefixOverrides="or" suffix=")">
							<foreach collection="chkPrice_arr" item="chkPrice">
								<choose>
									<when test="chkPrice.equals('PR1')">
										A.product_price between 0 and 10000
									</when>
									<when test="chkPrice.equals('PR2')">
										or A.product_price between 10000 and 30000
									</when>
									<when test="chkPrice.equals('PR3')">
										or A.product_price between 30000 and 50000
									</when>
									<when test="chkPrice.equals('PR4')">
										or A.product_price between 50000 and 100000
									</when>
									<when test="chkPrice.equals('PR5')">
										or A.product_price between 100000 and 999999999
									</when>
								</choose>
							</foreach>
						</trim>
					</if>
					<foreach collection="chkColor_arr" item="chkColor" open="and B.product_color in (" separator="," close=")">
						#{chkColor}
					</foreach>
				</if>
				<if test="productCategorie == 0">
					where UPPER(product_name) like UPPER('%' || #{keyword} || '%')
					<if test="chkPrice_arr != null">
						<trim prefix="and (" prefixOverrides="or" suffix=")">
							<foreach collection="chkPrice_arr" item="chkPrice">
								<choose>
									<when test="chkPrice.equals('PR1')">
										A.product_price between 0 and 10000
									</when>
									<when test="chkPrice.equals('PR2')">
										or A.product_price between 10000 and 30000
									</when>
									<when test="chkPrice.equals('PR3')">
										or A.product_price between 30000 and 50000
									</when>
									<when test="chkPrice.equals('PR4')">
										or A.product_price between 50000 and 100000
									</when>
									<when test="chkPrice.equals('PR5')">
										or A.product_price between 100000 and 999999999
									</when>
								</choose>
							</foreach>
						</trim>
						<foreach collection="chkColor_arr" item="chkColor" open="and B.product_color in (" separator="," close=")">
							#{chkColor}
						</foreach>
					</if>
					<if test="chkPrice_arr == null">
						<foreach collection="chkColor_arr" item="chkColor" open="and B.product_color in (" separator="," close=")">
							#{chkColor}
						</foreach>
					</if>
				</if>
				<choose>
					<when test="orderBy.equals('redate')">
						order by product_date desc
					</when>
					<when test="orderBy.equals('hprice')">
						order by product_price desc, product_date desc
					</when>
					<when test="orderBy.equals('lprice')">
						order by product_price asc, product_date desc
					</when>
					<when test="orderBy.equals('rating')">
						order by product_rating desc, product_date desc
					</when>
					<when test="orderBy.equals('review')">
						order by review_count desc, product_date desc
					</when>
				</choose>
				)C)D where rn between #{start} and #{end}
		</if>
	</select>

	
</mapper>